[versions]
agp = "8.1.4"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.8.0"
androidx-appcompat = "1.6.1"
androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.12.0"
androidx-espresso-core = "3.5.1"
androidx-material = "1.10.0"
androidx-test-junit = "1.1.5"
build-konfig = "0.15.0"
#compose = "1.5.10"
compose-bom = "2023.10.01"
compose-compiler = "1.5.3"
compose-plugin = "1.5.11"
coroutines = "1.7.3"
datetime = "0.4.1"
decompose = "2.2.0-compose-experimental-beta02"
icerock-graphics = "0.9.0"
icerock-resources = "0.23.0"
junit = "4.13.2"
kamel = "0.9.0"
koin = "3.5.1"
kotlin = "1.9.20"
kotlinx-collections-immutable = "0.3.6"
kotlinx-serialization-json = "1.6.1"
ktor = "2.3.6"
logback = "1.4.11"
napier = "2.6.1"
sql-delight = "2.0.1"

[libraries]
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
androidx-compose-ui = { module = "androidx.compose.ui:ui" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
ch-qos-logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-extensions = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose" }
datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
icerock-moko-graphics = { module = "dev.icerock.moko:graphics", version.ref = "icerock-graphics" }
icerock-moko-resources = { module = "dev.icerock.moko:resources", version.ref = "icerock-resources" }
icerock-moko-resources-generator = { module = "dev.icerock.moko:resources-generator", version.ref = "icerock-resources" }
icerock-moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "icerock-resources" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
kamel = { module = "media.kamel:kamel-image", version.ref = "kamel" }
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android" }
koin-compose = { module = "io.insert-koin:koin-compose" }
koin-core = { module = "io.insert-koin:koin-core" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinx-collections-immutable" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
sql-delight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sql-delight" }
sql-delight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sql-delight" }
sql-delight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sql-delight" }
sql-delight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sql-delight" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
buildKonfig = { id = "com.codingfeline.buildkonfig", version.ref = "build-konfig" }
jetbrainsAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
#kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
#org-jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "org-jetbrains-kotlin-jvm" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
icerokMokoResourcesMultiplatform = { id = "dev.icerock.mobile.multiplatform-resources" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sql-delight" }